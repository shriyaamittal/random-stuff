cities <- as.matrix(UScitiesD)
cities

city.location <- cmdscale(cities, k=2)    #ask for a 2 dimensional solution
round(city.location,0)        #print the locations to the screen

plot(city.location[,1],city.location[,2], type="n")
text(city.location[,1], city.location[,2]) # The plot shows the numbers and not the names of the cities

plot(city.location[,1],city.location[,2], type="n")
text(city.location[,1], city.location[,2], labels(UScitiesD))

## Inverse the east and west directions

cities <- as.matrix(UScitiesD)

city.location <- cmdscale(cities, k=2)
city.location <- -city.location

plot(city.location[,1],city.location[,2], type="n",xlim=)
text(city.location[,1], city.location[,2], labels(UScitiesD))

## Install maps package

install.packages(c("maps", "mapdata"))
library(maps)
map("state")

## Using maps
source: http://eriqande.github.io/rep-res-web/lectures/making-maps-with-R.html

	labs <- data.frame(
			long = c(-84.38),
			lat = c(33.7),
			names = c("SWFSC-FED", "NWFSC"),
			stringsAsFactors = FALSE
			)  

	gg1 + 
	geom_point(data = labs, aes(x = long, y = lat), color = "yellow", size = 4)
